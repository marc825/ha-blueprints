blueprint:
  name: Sun Elevation to Brightness
  description: Adjust brightness of lights based on the current sun elevation. If
    force debug is enabled, you need to execute this automation manually or let Home
    Assitant restart before the change take effect.
  domain: automation
  input:
    input_number_command:
      name: Command Output Text Helper
      description: Output for Command events of Device
      default: []
      selector:
        entity:
          domain:
          - input_number
          multiple: false
    max_brightness:
      name: Maximum brightness percent
      description: Brightness to set as the maximum brightness
      default: 100
      selector:
        number:
          min: 2.0
          max: 100.0
          unit_of_measurement: '%'
          mode: slider
          step: 1.0
    min_brightness:
      name: Minimum brightnes percent
      description: Brightness to set as the minimum brightness
      default: 1
      selector:
        number:
          min: 1.0
          max: 99.0
          unit_of_measurement: '%'
          mode: slider
          step: 1.0
    start_dim_up_rising:
      name: Elevation of the sun to start brighten the light when the sun is rising
      default: 0
      selector:
        number:
          min: -35.0
          max: 25.0
          mode: slider
          step: 0.5
    max_brightness_elevation:
      name: Elevation of the Sun at which max Brightness is applied
      default: 45
      selector:
        number:
          min: 30.0
          max: 90.0
          mode: slider
          step: 0.5
    end_dim_down_setting:
      name: Elevation of the sun to start dim the light when the sun is setting
      default: -10
      selector:
        number:
          min: -35.0
          max: 25.0
          mode: slider
          step: 0.5
variables:
  start_setting: !input 'max_brightness_elevation'
  start_rising: !input 'start_dim_up_rising'
  end_setting: !input 'end_dim_down_setting'
  end_rising: !input 'max_brightness_elevation'
  rising: '{{ state_attr(''sun.sun'', ''rising'') }}'
  max_brightness_input: !input 'max_brightness'
  max_brightness: '{{ max_brightness_input|float }}'
  min_brightness_input: !input 'min_brightness'
  min_brightness: '{{ min_brightness_input|float }}'
  max_elevation: '{% if rising %}{{end_rising|float}}{% else %}{{start_setting|float}}{%
    endif %}'
  min_elevation: '{% if rising %}{{start_rising|float}}{% else %}{{end_setting|float}}{%
    endif %}'
  elevation: '{{ state_attr(''sun.sun'', ''elevation'') }}'
  brightness_range: '{{ max_brightness - min_brightness }}'
  delta_to_min: '{{ elevation - min_elevation }}'
  elevation_range: '{{ max_elevation - min_elevation }}'
  full_percent: '{% if delta_to_min / elevation_range < 0 %}0{% elif delta_to_min
    / elevation_range > 1 %}1{% else %}{{delta_to_min / elevation_range}}{% endif %}'
  brightness_pct: '{{ full_percent * brightness_range + min_brightness }}'
  brightness: '{{ (brightness_pct * 2.54)|int }}'
trigger:
- platform: state
  entity_id: sun.sun
  attribute: elevation
- platform: event
  event_type: call_service
  event_data:
    domain: light
    service: turn_on
- platform: homeassistant
  event: start
mode: queued
action:
- service: input_number.set_value
  data:
    entity_id: !input input_number_command
    value: '{{ brightness }}'